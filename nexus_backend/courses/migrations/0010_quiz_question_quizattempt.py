# Generated by Django 5.1.7 on 2025-06-04 07:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0009_remove_quiz_created_by_remove_quiz_lesson_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('shuffle_questions', models.BooleanField(default=False)),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='Time limit in minutes', null=True)),
                ('passing_score', models.DecimalField(decimal_places=2, default=70.0, help_text='Minimum score to pass', max_digits=5)),
                ('max_attempts', models.PositiveIntegerField(default=3, help_text='Maximum number of attempts allowed')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='courses.lesson')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('short', 'Short Answer'), ('fill', 'Fill in the Blank'), ('true_false', 'True/False')], default='mcq', max_length=20)),
                ('choices', models.JSONField(blank=True, help_text="For MCQ: ['option1', 'option2', 'option3', 'option4']", null=True)),
                ('correct_answer', models.TextField(help_text='Correct answer or answer key')),
                ('explanation', models.TextField(blank=True, help_text='Explanation for the correct answer')),
                ('points', models.PositiveIntegerField(default=1, help_text='Points awarded for correct answer')),
                ('position', models.PositiveIntegerField(default=0, help_text='Order of question in quiz')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='courses.quiz')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_points', models.PositiveIntegerField(default=0)),
                ('earned_points', models.PositiveIntegerField(default=0)),
                ('passed', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken', models.PositiveIntegerField(blank=True, help_text='Time taken in seconds', null=True)),
                ('answers', models.JSONField(default=dict, help_text="{question_id: {'answer': 'user_answer', 'is_correct': bool}}")),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='courses.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
                'unique_together': {('student', 'quiz', 'started_at')},
            },
        ),
    ]
